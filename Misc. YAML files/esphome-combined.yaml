esphome:
  name: esphome-web-863f74
  friendly_name: Seeed-dev
  min_version: 2024.11.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio

  #Inital Lightstrip state
  on_boot:
    priority: 601
    then:
      - light.turn_on:
          id: led_strip
          brightness: 35%
          red: 0%
          blue: 100%
          green: 0%

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Set up a wifi access point
  ap: {}

text_sensor:
  - platform: template
    name: "TCP/IP Address"
    lambda: 'return {WiFi.localIP().toString().c_str()};'
    id: tcp_ip_address

font:
  - file: "gfonts://Roboto"
    id: title
    size: 20
  - file: "gfonts://Roboto"
    id: ip_font
    size: 18

image:
  - file: mdi:white-balance-sunny
    id: icon_weather
    resize: 20x20
    type: BINARY
  - file: mdi:home-thermometer
    id: icon_temperature
    resize: 20x20
    type: BINARY
  - file: mdi:water-percent
    id: icon_humidity
    resize: 20x20
    type: BINARY
  - file: mdi:home-automation
    id: icon_devices
    resize: 20x20
    type: BINARY

i2c:
  sda: GPIO6
  scl: GPIO7
  frequency: 400kHz

display:
  - platform: ssd1306_i2c
    # model: "SH1106 128x64"
    model: "SSD1306 128x64"
    offset_x: 0
    address: 0x3C
    id: oled_display
    lambda: |-
      it.line(0, 0, 127, 0);
      it.line(127, 0, 127, 63);
      it.line(127, 63, 0, 63);
      it.line(0, 63, 0, 0);
      it.print(0,0,id(title), "Local IP:");
      it.printf(0,20,id(ip_font), "%s", id(tcp_ip_address).state.c_str() );
      it.image(1,40,id(icon_weather));
      it.image(22,40,id(icon_temperature));
      it.image(42,40,id(icon_devices));

# Example configuration entry
output:
  - platform: ledc
    pin: GPIO02
    id: gpio_02

light:
  - platform: monochromatic
    output: gpio_02
    name: "LED filament"
    id: led_filament
  - platform: esp32_rmt_led_strip
    chipset: WS2812
    rgb_order: GRB
    pin: GPIO10
    num_leds: 5
    rmt_channel: 0
    id: led_strip
    name: "My LED Strip"
    # Look at : https://github.com/ljmerza/light-entity-card - For a better Dashboard Control.
    effects:
     # Customize parameters
      - random: 
      - flicker:
      - strobe: 
      - pulse: 
      - addressable_color_wipe:
      - addressable_fireworks:
      #Custom samples  
      - random:
          name: "My Fast Random Effect"
          transition_length: 4s
          update_interval: 5s
      - lambda:
          name: "My Custom Effect"
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(led_strip).turn_on();
            // Transition of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_rgb(1.0, 1.0, 1.0);
            } else if (state == 1) {
              call.set_rgb(1.0, 0.0, 1.0);
            } else if (state == 2) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else {
              call.set_rgb(1.0, 0.0, 0.0);
            }
            call.perform();
            state += 1;
            if (state == 4)
              state = 0;
      - addressable_rainbow:
          name: "Rainbow Effect With Custom Values"
          speed: 10
          width: 50
      - flicker:
          name: "Flicker Effect With Custom Values"
          alpha: 95%
          intensity: 1.5%
      - addressable_scan:
          name: "Scan Effect With Custom Values"
          move_interval: 100ms
          scan_width: 1
      - addressable_random_twinkle:
          name: "Random Twinkle Effect With Custom Values"
          twinkle_probability: 5%
          progress_interval: 32ms